#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-j reload
hc keybind $Mod-q close_or_remove
hc keybind $Mod-Return spawn wezterm
hc keybind $Mod-d spawn rofi -show drun
hc keybind $Mod-F1 spawn qutebrowser
hc keybind $Mod-F2 spawn wezterm start ranger

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-n     focus left
hc keybind $Mod-r     focus down
hc keybind $Mod-l     focus up
hc keybind $Mod-s     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-n     shift left
hc keybind $Mod-Shift-r     shift down
hc keybind $Mod-Shift-l     shift up
hc keybind $Mod-Shift-s     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-g       split   bottom  0.5
hc keybind $Mod-b       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-n       resize left +$resizestep
hc keybind $Mod-Control-r       resize down +$resizestep
hc keybind $Mod-Control-l       resize up +$resizestep
hc keybind $Mod-Control-s       resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-k remove
hc keybind $Mod-i floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-j jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#7F8490'
hc set frame_border_normal_color '#ffffff00'
hc set frame_bg_normal_color '#ffffff00'
hc set frame_bg_active_color '#7F8490'
hc set show_frame_decorations 'if_multiple'
hc set frame_bg_transparent on

hc attr theme.title_height 15
hc attr theme.title_when multiple_tabs
hc attr theme.title_font 'Iosevka rnepi:pixelsize=12'  # example using Xft
hc attr theme.title_depth 3  # space below the title's baseline
hc attr theme.active.color '#e7c664'
hc attr theme.title_color '#ffffff'
hc attr theme.normal.color '#595F6F'
hc attr theme.urgent.color '#7811A1'
hc attr theme.tab_color '#1F1F1F'
hc attr theme.active.tab_color '#2B4F0Add'
hc attr theme.active.tab_outer_color '#6C8257dd'
hc attr theme.active.tab_title_color '#ababab'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.tiling.outer_width 0
hc attr theme.background_color '#141414'

hc set frame_border_width 4
hc set frame_transparent_width 0
hc set frame_gap 0
hc set frame_padding 0
hc set window_gap 8

hc set smart_window_surroundings off
hc set smart_frame_surroundings on

hc set mouse_recenter_gap 0

# rules
hc unrule -F

# xprop | grep WM_CLASS
hc rule class=qutebrowser tag=1 focus=on switchtag=on
hc rule class=Signal tag=5 focus=off switchtag=off
hc rule class=Spotify tag=6 focus=off switchtag=off

hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

setxkbmap de bone
hsetroot -solid '#222327'
/home/elsenm/.config/polybar/launch.sh
picom -b
dunst
